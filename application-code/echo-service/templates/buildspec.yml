version: 0.2

phases:
  pre_build:
    commands:
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 240484791744.dkr.ecr.eu-west-1.amazonaws.com
      - # Replace text in files (requires custom solution)
      - COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION:0:7}
      - if [ -z "$COMMIT_HASH" ]; then COMMIT_HASH="latest"; fi
      - IMAGE_TAG=$COMMIT_HASH
      - ls
      - ls $FOLDER_PATH
  build:
    commands:
      - # Build the main container
      - echo Build started on `date`
      - docker build -t $REPO_URL $FOLDER_PATH
      - # Build the echo-service container
  post_build:
    commands:
      - # Push the main container
      # First run - docker push $REPO_URL || true
      - docker tag $REPO_URL $REPO_URL:$IMAGE_TAG
      - docker push $REPO_URL:$IMAGE_TAG
      - # Push the echo-service container
      - echo Updating the Amazon ECS task definition...
      - |
          TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition $TASK_DEFINITION_FAMILY --query '{
                containerDefinitions: taskDefinition.containerDefinitions,
                family: taskDefinition.family,
                taskRoleArn: taskDefinition.taskRoleArn,
                executionRoleArn: taskDefinition.executionRoleArn,
                networkMode: taskDefinition.networkMode,
                volumes: taskDefinition.volumes,
                placementConstraints: taskDefinition.placementConstraints,
                requiresCompatibilities: taskDefinition.requiresCompatibilities,
                cpu: taskDefinition.cpu,
                memory: taskDefinition.memory
            }'> tmp-td.json)
      - NEW_TASK_DEFINTION=$(jq -r --arg NEWIMAGE "$REPO_URL:$IMAGE_TAG" '.containerDefinitions[].image |= $NEWIMAGE' tmp-td.json > tmp-ntd.json)
      # - NEW_REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')
      - aws ecs register-task-definition --cli-input-json file://tmp-ntd.json
      - mkdir artifacts
      - cp tmp-ntd.json artifacts/task-definition.json
      - echo REPO_URL $REPO_URL
      - echo IMAGE_TAG $IMAGE_TAG
      - echo '[{"name":"CONTAINER_NAME","imageUri":"$REPO_URL:$IMAGE_TAG"}]' > imagedefinitions.json
      - cp imagedefinitions.json artifacts/
artifacts:
  files:
    - '**/*'
  base-directory: 'artifacts'
  discard-paths: yes